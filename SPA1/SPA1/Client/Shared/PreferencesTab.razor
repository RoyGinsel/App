<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Preferences tab</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-md-4">
                        <EditForm Model="@preferences" OnSubmit="OnPreferencesSaved">
                            <div class="form-group">
                                <label for="name" class="control-label">Name: </label>
                                <InputCheckbox id="name" @bind-value="preferences.mainBackgroundColor" class="form-control" />
                                <InputCheckbox id="name" @bind-value="preferences.mainBackgroundColor" class="form-control" />
                                <InputCheckbox id="name" @bind-value="preferences.mainBackgroundColor" class="form-control" />
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <input type="submit" class="btn btn-primary" value="Save Changes" />
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public Preferences preferences { get; set; }

    [Parameter]
    public EventCallback<Preferences> preferrencesSaved { get; set; }

    private Task OnPreferencesSaved(EditContext editContext)
    {
        
@*        preferences = editContext.value;
*@
        return preferrencesSaved.InvokeAsync(preferences);
    }
}
